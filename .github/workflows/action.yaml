# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '00 6 1 * *'
  release:
    types:
      - published

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .
          python -m pip install -U pylint

      - name: Run Lint
        run: pylint --rcfile tests/pylint.rc src/peakrdl_python

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .
          python -m pip install -U mypy
      - name: Type Check
        run: mypy src/peakrdl_python --config-file=tests/.mypy.ini

  tests:
    needs:
      - mypy
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .

        python -m pip install pytest
        python -m pip install mypy


    - name: Generate testcases
      run: |
        # retrieve the example code from the systemRDL compiler
        wget -L https://raw.githubusercontent.com/SystemRDL/systemrdl-compiler/main/examples/accelera-generic_example.rdl -O tests/testcases/accelera-generic_example.rdl
        python generate_testcases.py
        mypy testcase_output/raw --config-file=tests/.mypy.ini
        # mypy testcase_output/autopep8 --config-file=tests/.mypy.ini
        # pylint --rcfile tests/pylint.rc testcase_output/autopep8 --disable=duplicate-code,line-too-long,too-many-statements,invalid-name,unused-import,too-many-instance-attributes,too-many-arguments,too-many-lines
        pytest testcase_output/raw
        pytest testcase_output/autopep8

    - name: Run PeakRDL Case
      run: |
        python -m pip install peakrdl

        peakrdl python tests/testcases/basic.rdl -o peakrdl_out/raw/
        peakrdl python tests/testcases/simple.xml tests/testcases/multifile.rdl -o peakrdl_out/raw
        pytest peakrdl_out/raw
        peakrdl python tests/testcases/basic.rdl -o peakrdl_out/autopep8/ --autoformat
        pytest peakrdl_out/autopep8

    #-------------------------------------------------------------------------------
    build_sdist:
      needs:
        - tests
        - lint
        - mypy
      name: Build source distribution
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - uses: actions/setup-python@v2
          name: Install Python
          with:
            python-version: 3.8

        - name: Build sdist
          run: python setup.py sdist

        - uses: actions/upload-artifact@v2
          with:
            path: dist/*.tar.gz

    #-------------------------------------------------------------------------------
    deploy:
      needs:
        - build_sdist

      runs-on: ubuntu-latest

      # Only publish when a GitHub Release is created.
      if: github.event_name == 'release'
      steps:
        - uses: actions/download-artifact@v2
          with:
            name: artifact
            path: dist

        - uses: pypa/gh-action-pypi-publish@master
          with:
            user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}