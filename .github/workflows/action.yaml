# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .
          python -m pip install -U pylint

      - name: Run Lint
        run: pylint --rcfile tests/pylint.rc src/peakrdl_python

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .
          python -m pip install -U mypy
      - name: Type Check
        run: mypy src/peakrdl_python --config-file=tests/.mypy.ini

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .

        python -m pip install pytest
        python -m pip install mypy


    - name: Generate testcases
      run: |
        python generate_testcases.py
        mypy testcase_output/raw --config-file=tests/.mypy.ini
        # autopep8 is moving some of the #ignore statements around so it no longer passes mypy
        # mypy testcase_output/autopep8 --config-file=tests/.mypy.ini
        pytest testcase_output/raw
        pytest testcase_output/autopep8

    - name: Run PeakRDL Case
      run: |
        python -m pip install peakrdl

        peakrdl python tests/testcases/basic.rdl -o peakrdl_out/raw/
        peakrdl python tests/testcases/simple.xml tests/testcases/multifile.rdl -o peakrdl_out/raw
        pytest peakrdl_out/raw
        peakrdl python tests/testcases/basic.rdl -o peakrdl_out/autopep8/ --autoformat
        pytest peakrdl_out/autopep8

    - name: Check Examples
      run: |
        python -m pip install peakrdl

        # build the libraries for the two cases
        cd example/tranversing_address_map/
        peakrdl python chip_with_registers.rdl -o .
        python -m reseting_registers.py
        python -m dumping_register_state_to_json_file

        cd ../..

        cd example/simulating_callbacks

        peakrdl python chip_with_a_GPIO.rdl -o .
        python -m flashing_the_LED

        cd ../..

